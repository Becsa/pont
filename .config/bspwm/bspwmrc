#! /bin/sh
gap=0
PANEL_HEIGHT=25
export gap
export PANEL_HEIGHT

#This creates negative padding equal to window gap so that gaps are shown only between windows and not on desktop edges.
bspc config window_gap $gap;
# bspc config top_padding $(($PANEL_HEIGHT-$gap))
# bspc config left_padding -$gap
# bspc config right_padding -$gap
# bspc config bottom_padding -$gap
bspc config top_padding $PANEL_HEIGHT
bspc config left_padding $gap
bspc config right_padding $gap
bspc config_bottom padding $gap
#Various settings
bspc config gapless_monocle     false #Default setup uses negative padding, and gapless monocle looks really weird like that
bspc config borderless_monocle  true
bspc config single_monocle true
bspc config paddingless_monocle false
bspc config remove_disabled_monitors true
bspc config remove_unplugged_monitors true
## Honor size hints: do not make windows smaller than they wish to be
#bspc config honor_size_hints true

##Color settings
# bspc config focused_border_color "#1ABB9B"
# bspc config focused_border_color "#221ABB"
bspc config focused_border_color "#1F8999"
bspc config normal_border_color "#222D32"
#"#000000"
bspc config presel_feedback_color "#1ABB9B"
#"#8F3724"
bspc config border_width 3

bspc config focus_follows_pointer false
#bspc config pointer_follows_focus true #Some keybindings automatically enable and disable this setting

#Settings for manual splitting
bspc config split_ratio         0.50

bspc config initial_polarity second_child
bspc config automatic_scheme longest_side

bspc monitor --reset-desktops       7 8 9 10
# bspc monitor --reset-desktops 1 2 3 4 5 6 7 8 9 10

###This creates and names desktops for multiple monitors.
# workspaces_multimonitor &
bspc rule -a "*:*" #split_dir=east
bspc rule -a Guake state=floating  focus=on sticky=on
bspc rule -a Emacs state=tiled focus=on desktop='' follow=on
bspc rula -a WriteTeX state=floating focus=on
bspc rule -a Zathura state=tiled split_ratio=0.63 #split_dir=east 0.65 jol mukodik csak kicsi
bspc rule -a screenkey --unmanage
bspc rule -a gcolor2 state=floating center=true
bspc rule -a lxappearance state=floating center=true
bspc rule -a gmrun state=floating center=true
bspc rule -a file-roller state=floating center=true
bspc rule -a floaterm state=floating center=true
bspc rule -a spotify state=pseudo_tiled
bspc rule -a file-roller state=pseudo_tiled
bspc rule -a transmission-gtk state=pseudo_tiled
bspc rule -a firefox desktop='' follow=on
bspc rule -a libreoffice state=tiled desktop='' follow=on
bspc rule -a '*:libreofficedev' state=tiled
bspc rule -a '*:soffice' state=tiled
bspc rule -a Inkscape  focus=on desktop='' follow=on
bspc rule -a WriteTeX state=floating focus=on desktop='' follow=on
bspc rule -a 9menu border=off manage=off
bspc rule -a tint2 border=off manage=off

##  Autogap adjusts windowgap automatically according to the number of
##  windows on the desktop. Using it disables negative window gap.
#autogap &

##  This script balances all windows when new one is spawned
#euclid_balancer &

##Edge-switcher switches to next workspace when moves moves to the
##edge of the monitor (behavior similar to enlightenment)
#edge-switcher &

###External rules
##Pseudo automatic mode: always splits focused window when opening new window
# bspc config external_rules_command /usr/bin/pseudo_automatic_mode
##Adjust new window: splits biggest windows to keep windows about the same size
#bspc config external_rules_command /usr/bin/adjust-new-window

##Autostart apps
#Keybindings daemon
#sxhkd &
#Source autostartfile. Uncomment this if you use bspwm-git
#. $HOME/.config/bspwm/autostart
limepanel &
# $HOME/.config/polybar/launch.sh
# polybar example
# Alter compton settings if using intel graphics
GRAPHIC_CARD=$(lspci | grep -i "vga" | sed 's/.*://' | sed 's/(.*//' | sed 's/^[ \t]*//')
if [[ $(echo $GRAPHIC_CARD | grep -i 'intel\|lenovo') != "" ]]; then MCODE='initrd=\intel-ucode.img'
  sed -i 's/"xrender"/"glx"/' ~/.config/picom.conf
  grep -q 'vsync = "opengl-swc";' ~/.config/picom.conf || echo 'vsync = "opengl-swc";' >> ~/.config/picom.conf
fi
bash -c "sleep 10 && guake"
